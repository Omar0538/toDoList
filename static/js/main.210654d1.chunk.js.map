{"version":3,"sources":["Context/ContextPlan.js","component/Plan.js","component/Header.js","component/AddPlan.js","component/PlanList.js","App.js","reportWebVitals.js","index.js"],"names":["ContextPlan","createContext","ContextPlanProvider","props","useState","items","setItems","initialState","JSON","parse","localStorage","getItem","tasks","setTasks","useEffect","setItem","stringify","Provider","value","deletehandler","id","filter","task","addTask","taskTitle","title","uuidv4","editHandler","item","find","editTask","newTask","map","children","Plan","useContext","className","onClick","Header","AddPlan","addItem","setAddItem","onSubmit","e","preventDefault","onChange","target","onChangeHandler","required","placeholder","PlanList","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.210654d1.chunk.js","sourcesContent":["\r\nimport React,{createContext,useState,useEffect} from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nexport const ContextPlan=createContext();\r\n\r\nconst ContextPlanProvider = (props) => {\r\n    const [items, setItems] = useState(null)\r\n    const initialState=JSON.parse(localStorage.getItem(\"tasks\"))||[]\r\n    const [tasks, setTasks] = useState(initialState);\r\n    const deletehandler=(id)=>{\r\n      setTasks( tasks.filter(task=> id!==task.id))\r\n     }    \r\n    const addTask=(taskTitle)=>{\r\n        setTasks([...tasks,{title:taskTitle,id:uuidv4()}])\r\n    }       \r\n    const editHandler=(id)=>{\r\n        const item =tasks.find(task=>task.id===id);\r\n        setItems(item);\r\n\r\n    }  \r\n    const editTask=(title,id)=>{\r\n        const newTask=tasks.map(task=>(task.id===id)?{title,id}:task)\r\n        setTasks(newTask);\r\n        setItems(null);\r\n    }   \r\n    useEffect(()=>{\r\n        localStorage.setItem(\"tasks\",JSON.stringify(tasks))\r\n    },[tasks])\r\n\r\n    \r\n    return (\r\n        <ContextPlan.Provider value={{tasks,deletehandler,addTask,editHandler,items,editTask}}>\r\n            {props.children}\r\n        </ContextPlan.Provider>\r\n    )\r\n}\r\n\r\nexport default ContextPlanProvider\r\n","import React,{useContext} from 'react'\r\nimport { ContextPlan } from '../Context/ContextPlan';\r\n\r\nconst Plan = ({task}) => {\r\n\r\n\r\n    const {deletehandler,editHandler} = useContext(ContextPlan);\r\n\r\n    return (\r\n        <div className=\"Plan\">\r\n            <span>{task.title} </span>\r\n            \r\n            <div className=\"buttons\">\r\n                <button onClick={()=>deletehandler(task.id)}><i className=\"fas fa-trash-alt\"></i></button>\r\n                <button onClick={()=>editHandler(task.id)}><i className=\"fas fa-pen\"></i></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Plan\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"Header\">\r\n           <h2>Plan of The Day</h2> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React,{useState,useContext,useEffect} from 'react';\r\nimport {ContextPlan} from '../Context/ContextPlan';\r\nimport '../App.css'\r\nconst AddPlan = () => {\r\n    const {addTask,items,editTask} = useContext(ContextPlan)\r\n    const [addItem, setAddItem] = useState(\"\")\r\n    const onChangeHandler=(e)=>{\r\n        setAddItem(e.target.value);\r\n    }\r\n    const onClickHandler=(e)=>{\r\n        e.preventDefault()\r\n        if (!items) {\r\n            addTask(addItem);\r\n            setAddItem(\"\");\r\n        }\r\n        else{\r\n            editTask(addItem,items.id)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n      if (items) {\r\n          setAddItem(items.title)\r\n      }else{\r\n          setAddItem(\"\")\r\n      }\r\n    }, [items])\r\n   \r\n    return (\r\n        <form className=\"AddPlan\" onSubmit={onClickHandler}>\r\n            <input onChange={(e)=>onChangeHandler(e)} required value={addItem} placeholder=\"Add task...\"/>\r\n            <button >{!items?\"Add Task\":\"Edit Task\"}</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddPlan\r\n","import React,{useContext} from 'react';\r\nimport Plan from './Plan';\r\nimport Header from './Header';\r\nimport AddPlan from './AddPlan'\r\nimport {ContextPlan} from \"../Context/ContextPlan\";\r\nconst PlanList = () => {\r\n    const {tasks} = useContext(ContextPlan)\r\n    return (\r\n        <div className=\"PlanList\">\r\n                <Header/>\r\n                <AddPlan/>\r\n                {tasks.length?\r\n                (<div className=\"tasks\">{tasks.map((task)=>{\r\n                    return <Plan task={task} key={task.id}/> \r\n                })}</div>):\r\n                (<div className=\"no-plans\">No Tasks, create new tasks</div>)\r\n                 } \r\n  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlanList\r\n","import React from 'react'\r\nimport './App.css'\r\nimport PlanList from './component/PlanList'\r\nimport ContextPlanProvider from './Context/ContextPlan'\r\nconst App = () => {\r\n    return (\r\n        <ContextPlanProvider>\r\n            <div className=\"App\">\r\n                <PlanList/>\r\n            </div>\r\n        </ContextPlanProvider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}